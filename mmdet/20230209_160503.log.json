{"env_info": "sys.platform: linux\nPython: 3.8.13 (default, Mar 28 2022, 11:38:47) [GCC 7.5.0]\nCUDA available: True\nGPU 0: NVIDIA TITAN RTX\nCUDA_HOME: /share12/home/zhenni/anaconda3/envs/mmlab1\nNVCC: Cuda compilation tools, release 11.7, V11.7.99\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.13.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.7\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.5\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.14.1\nOpenCV: 4.7.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.7\nMMDetection: 2.28.1+", "config": "model = dict(\n    type='MaskRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=1,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n        mask_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        mask_head=dict(\n            type='FCNMaskHead',\n            num_convs=4,\n            in_channels=256,\n            conv_out_channels=256,\n            num_classes=1,\n            loss_mask=dict(\n                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            mask_size=28,\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100,\n            mask_thr_binary=0.5)))\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file=\n        '/share12/home/zhenni/PythonProject/Dataset/balloon/annotations/train.json',\n        img_prefix='/share12/home/zhenni/PythonProject/Dataset/balloon/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n        ],\n        classes=('balloon', )),\n    val=dict(\n        type='CocoDataset',\n        ann_file=\n        '/share12/home/zhenni/PythonProject/Dataset/balloon/annotations/val.json',\n        img_prefix='/share12/home/zhenni/PythonProject/Dataset/balloon/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('balloon', )),\n    test=dict(\n        type='CocoDataset',\n        ann_file='data/coco/annotations/instances_val2017.json',\n        img_prefix='data/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(metric=['bbox', 'segm'])\noptimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[16, 22])\nrunner = dict(type='EpochBasedRunner', max_epochs=8)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=2, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '/share12/home/zhenni/PythonProject/openmmlab-camp/mmdet-1/ckpt/mask_rcnn_r50_fpn_2x_coco_bbox_mAP-0.392__segm_mAP-0.354_20200505_003907-3e542a40.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nwork_dir = './work_dirs/train'\nauto_resume = False\ngpu_ids = range(0, 1)\n", "seed": 760051334, "exp_name": "train.py"}
{"mode": "train", "epoch": 1, "iter": 2, "lr": 0.0, "memory": 3503, "data_time": 1.89968, "loss_rpn_cls": 0.08871, "loss_rpn_bbox": 0.01461, "loss_cls": 0.73939, "acc": 38.08594, "loss_bbox": 0.33102, "loss_mask": 1.00278, "loss": 2.17649, "time": 68.16016}
{"mode": "train", "epoch": 1, "iter": 4, "lr": 1e-05, "memory": 3503, "data_time": 2.36677, "loss_rpn_cls": 0.03936, "loss_rpn_bbox": 0.00543, "loss_cls": 0.68443, "acc": 56.00586, "loss_bbox": 0.16708, "loss_mask": 0.63587, "loss": 1.53218, "time": 2.93118}
{"mode": "train", "epoch": 1, "iter": 6, "lr": 1e-05, "memory": 3610, "data_time": 3.21002, "loss_rpn_cls": 0.03049, "loss_rpn_bbox": 0.01387, "loss_cls": 0.7019, "acc": 47.75391, "loss_bbox": 0.31313, "loss_mask": 0.63049, "loss": 1.68988, "time": 4.18817}
{"mode": "train", "epoch": 1, "iter": 8, "lr": 1e-05, "memory": 3701, "data_time": 0.25361, "loss_rpn_cls": 0.20823, "loss_rpn_bbox": 0.03331, "loss_cls": 0.68125, "acc": 56.5918, "loss_bbox": 0.47262, "loss_mask": 1.26847, "loss": 2.66387, "time": 1.3343}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 2e-05, "memory": 3701, "data_time": 0.51003, "loss_rpn_cls": 0.22898, "loss_rpn_bbox": 0.02325, "loss_cls": 0.70063, "acc": 51.61133, "loss_bbox": 0.33869, "loss_mask": 1.03015, "loss": 2.32169, "time": 1.57457}
{"mode": "train", "epoch": 1, "iter": 12, "lr": 2e-05, "memory": 3701, "data_time": 0.23824, "loss_rpn_cls": 0.01857, "loss_rpn_bbox": 0.01199, "loss_cls": 0.65506, "acc": 61.18164, "loss_bbox": 0.38703, "loss_mask": 0.54645, "loss": 1.61911, "time": 1.28557}
{"mode": "train", "epoch": 1, "iter": 14, "lr": 3e-05, "memory": 3701, "data_time": 0.23826, "loss_rpn_cls": 0.03222, "loss_rpn_bbox": 0.00949, "loss_cls": 0.61788, "acc": 72.80273, "loss_bbox": 0.21899, "loss_mask": 0.75323, "loss": 1.63181, "time": 1.26295}
{"mode": "train", "epoch": 1, "iter": 16, "lr": 3e-05, "memory": 3701, "data_time": 0.21314, "loss_rpn_cls": 0.00283, "loss_rpn_bbox": 0.00136, "loss_cls": 0.59382, "acc": 81.29883, "loss_bbox": 0.13738, "loss_mask": 0.12329, "loss": 0.85869, "time": 1.19854}
{"mode": "train", "epoch": 1, "iter": 18, "lr": 3e-05, "memory": 3701, "data_time": 5.97974, "loss_rpn_cls": 0.12576, "loss_rpn_bbox": 0.03782, "loss_cls": 0.59738, "acc": 79.98047, "loss_bbox": 0.43832, "loss_mask": 0.50622, "loss": 1.7055, "time": 6.51568}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 4e-05, "memory": 3715, "data_time": 0.19182, "loss_rpn_cls": 0.10175, "loss_rpn_bbox": 0.02732, "loss_cls": 0.582, "acc": 83.05664, "loss_bbox": 0.3182, "loss_mask": 2.27482, "loss": 3.30409, "time": 0.77135}
{"mode": "train", "epoch": 1, "iter": 22, "lr": 4e-05, "memory": 3715, "data_time": 0.85003, "loss_rpn_cls": 0.03528, "loss_rpn_bbox": 0.00249, "loss_cls": 0.54093, "acc": 87.30469, "loss_bbox": 0.16199, "loss_mask": 0.16613, "loss": 0.90681, "time": 1.33561}
{"mode": "train", "epoch": 1, "iter": 24, "lr": 5e-05, "memory": 3715, "data_time": 10.64448, "loss_rpn_cls": 0.01686, "loss_rpn_bbox": 0.00895, "loss_cls": 0.52605, "acc": 87.25586, "loss_bbox": 0.38664, "loss_mask": 0.47704, "loss": 1.41553, "time": 11.63387}
{"mode": "train", "epoch": 1, "iter": 26, "lr": 5e-05, "memory": 3715, "data_time": 0.1768, "loss_rpn_cls": 0.06783, "loss_rpn_bbox": 0.01545, "loss_cls": 0.47578, "acc": 93.45703, "loss_bbox": 0.19717, "loss_mask": 0.78177, "loss": 1.53799, "time": 1.26491}
{"mode": "train", "epoch": 1, "iter": 28, "lr": 5e-05, "memory": 3715, "data_time": 0.15039, "loss_rpn_cls": 0.00897, "loss_rpn_bbox": 0.01583, "loss_cls": 0.44815, "acc": 89.79492, "loss_bbox": 0.38732, "loss_mask": 0.29542, "loss": 1.15568, "time": 2.11615}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 6e-05, "memory": 3715, "data_time": 0.26417, "loss_rpn_cls": 0.00579, "loss_rpn_bbox": 0.0077, "loss_cls": 0.41488, "acc": 90.38086, "loss_bbox": 0.3779, "loss_mask": 0.32001, "loss": 1.12628, "time": 1.31064}
{"mode": "val", "epoch": 1, "iter": 13, "lr": 6e-05, "bbox_mAP": 0.0077, "bbox_mAP_50": 0.025, "bbox_mAP_75": 0.0034, "bbox_mAP_s": 0.001, "bbox_mAP_m": 0.0144, "bbox_mAP_l": 0.011, "bbox_mAP_copypaste": "0.0077 0.0250 0.0034 0.0010 0.0144 0.0110", "segm_mAP": 0.0219, "segm_mAP_50": 0.0365, "segm_mAP_75": 0.0246, "segm_mAP_s": 0.008, "segm_mAP_m": 0.029, "segm_mAP_l": 0.088, "segm_mAP_copypaste": "0.0219 0.0365 0.0246 0.0080 0.0290 0.0880"}
{"mode": "train", "epoch": 2, "iter": 2, "lr": 6e-05, "memory": 3715, "data_time": 1.23984, "loss_rpn_cls": 0.04266, "loss_rpn_bbox": 0.01575, "loss_cls": 0.42793, "acc": 88.52539, "loss_bbox": 0.4076, "loss_mask": 0.21651, "loss": 1.11044, "time": 2.20381}
{"mode": "train", "epoch": 2, "iter": 4, "lr": 7e-05, "memory": 3715, "data_time": 0.19944, "loss_rpn_cls": 0.0382, "loss_rpn_bbox": 0.00389, "loss_cls": 0.35869, "acc": 92.13867, "loss_bbox": 0.26231, "loss_mask": 0.14392, "loss": 0.80699, "time": 1.16537}
{"mode": "train", "epoch": 2, "iter": 6, "lr": 7e-05, "memory": 3715, "data_time": 0.2503, "loss_rpn_cls": 0.06031, "loss_rpn_bbox": 0.03062, "loss_cls": 0.42437, "acc": 83.10547, "loss_bbox": 0.61151, "loss_mask": 0.23584, "loss": 1.36265, "time": 1.38977}
{"mode": "train", "epoch": 2, "iter": 8, "lr": 8e-05, "memory": 3715, "data_time": 0.22007, "loss_rpn_cls": 0.05159, "loss_rpn_bbox": 0.0166, "loss_cls": 0.36306, "acc": 92.23633, "loss_bbox": 0.25571, "loss_mask": 0.32213, "loss": 1.00908, "time": 1.22702}
{"mode": "train", "epoch": 2, "iter": 10, "lr": 8e-05, "memory": 3715, "data_time": 0.20256, "loss_rpn_cls": 0.01128, "loss_rpn_bbox": 0.00487, "loss_cls": 0.27399, "acc": 95.94727, "loss_bbox": 0.1479, "loss_mask": 0.11501, "loss": 0.55307, "time": 1.16763}
{"mode": "train", "epoch": 2, "iter": 12, "lr": 8e-05, "memory": 3715, "data_time": 0.22305, "loss_rpn_cls": 0.08747, "loss_rpn_bbox": 0.01908, "loss_cls": 0.34443, "acc": 91.40625, "loss_bbox": 0.32699, "loss_mask": 0.16544, "loss": 0.94341, "time": 1.19507}
{"mode": "train", "epoch": 2, "iter": 14, "lr": 9e-05, "memory": 3716, "data_time": 5.00027, "loss_rpn_cls": 0.00857, "loss_rpn_bbox": 0.00363, "loss_cls": 0.2944, "acc": 91.11328, "loss_bbox": 0.34492, "loss_mask": 0.4432, "loss": 1.09472, "time": 5.95159}
{"mode": "train", "epoch": 2, "iter": 16, "lr": 9e-05, "memory": 3716, "data_time": 0.22204, "loss_rpn_cls": 0.01251, "loss_rpn_bbox": 0.0124, "loss_cls": 0.32936, "acc": 88.13477, "loss_bbox": 0.44703, "loss_mask": 0.26646, "loss": 1.06775, "time": 1.11939}
{"mode": "train", "epoch": 2, "iter": 18, "lr": 0.0001, "memory": 3716, "data_time": 0.55757, "loss_rpn_cls": 0.13006, "loss_rpn_bbox": 0.02463, "loss_cls": 0.3753, "acc": 84.57031, "loss_bbox": 0.54677, "loss_mask": 0.15943, "loss": 1.2362, "time": 1.56958}
{"mode": "train", "epoch": 2, "iter": 20, "lr": 0.0001, "memory": 3852, "data_time": 0.20523, "loss_rpn_cls": 0.02071, "loss_rpn_bbox": 0.03007, "loss_cls": 0.39696, "acc": 82.76367, "loss_bbox": 0.62387, "loss_mask": 0.31322, "loss": 1.38482, "time": 1.26798}
{"mode": "train", "epoch": 2, "iter": 22, "lr": 0.0001, "memory": 3852, "data_time": 0.1424, "loss_rpn_cls": 0.03018, "loss_rpn_bbox": 0.00366, "loss_cls": 0.21741, "acc": 95.70312, "loss_bbox": 0.15153, "loss_mask": 0.08954, "loss": 0.49232, "time": 0.81512}
{"mode": "train", "epoch": 2, "iter": 24, "lr": 0.00011, "memory": 3852, "data_time": 0.15832, "loss_rpn_cls": 0.11165, "loss_rpn_bbox": 0.02274, "loss_cls": 0.26736, "acc": 92.13867, "loss_bbox": 0.21482, "loss_mask": 0.20999, "loss": 0.82656, "time": 0.80458}
{"mode": "train", "epoch": 2, "iter": 26, "lr": 0.00011, "memory": 3852, "data_time": 0.13798, "loss_rpn_cls": 0.00183, "loss_rpn_bbox": 0.00272, "loss_cls": 0.17398, "acc": 95.26367, "loss_bbox": 0.17252, "loss_mask": 0.08338, "loss": 0.43443, "time": 0.74606}
{"mode": "train", "epoch": 2, "iter": 28, "lr": 0.00012, "memory": 3852, "data_time": 0.13531, "loss_rpn_cls": 0.03371, "loss_rpn_bbox": 0.00418, "loss_cls": 0.22017, "acc": 94.0918, "loss_bbox": 0.2187, "loss_mask": 0.0984, "loss": 0.57516, "time": 0.59403}
{"mode": "train", "epoch": 2, "iter": 30, "lr": 0.00012, "memory": 3852, "data_time": 0.1641, "loss_rpn_cls": 0.01317, "loss_rpn_bbox": 0.00511, "loss_cls": 0.20222, "acc": 92.82227, "loss_bbox": 0.26691, "loss_mask": 0.11701, "loss": 0.60442, "time": 0.72997}
{"mode": "val", "epoch": 2, "iter": 13, "lr": 0.00012, "bbox_mAP": 0.1649, "bbox_mAP_50": 0.2356, "bbox_mAP_75": 0.1845, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.1517, "bbox_mAP_l": 0.2236, "bbox_mAP_copypaste": "0.1649 0.2356 0.1845 0.0000 0.1517 0.2236", "segm_mAP": 0.2039, "segm_mAP_50": 0.2398, "segm_mAP_75": 0.2339, "segm_mAP_s": 0.0111, "segm_mAP_m": 0.1255, "segm_mAP_l": 0.3851, "segm_mAP_copypaste": "0.2039 0.2398 0.2339 0.0111 0.1255 0.3851"}
{"mode": "train", "epoch": 3, "iter": 2, "lr": 0.00013, "memory": 3852, "data_time": 1.20344, "loss_rpn_cls": 0.00273, "loss_rpn_bbox": 0.00268, "loss_cls": 0.18153, "acc": 93.94531, "loss_bbox": 0.23063, "loss_mask": 0.06597, "loss": 0.48353, "time": 1.99296}
{"mode": "train", "epoch": 3, "iter": 4, "lr": 0.00013, "memory": 3852, "data_time": 0.74546, "loss_rpn_cls": 0.0178, "loss_rpn_bbox": 0.00297, "loss_cls": 0.17627, "acc": 95.89844, "loss_bbox": 0.14666, "loss_mask": 0.06295, "loss": 0.40666, "time": 1.5562}
{"mode": "train", "epoch": 3, "iter": 6, "lr": 0.00013, "memory": 3852, "data_time": 0.21094, "loss_rpn_cls": 0.05753, "loss_rpn_bbox": 0.02544, "loss_cls": 0.3785, "acc": 81.73828, "loss_bbox": 0.62968, "loss_mask": 0.20099, "loss": 1.29214, "time": 1.18837}
{"mode": "train", "epoch": 3, "iter": 8, "lr": 0.00014, "memory": 3852, "data_time": 7.11797, "loss_rpn_cls": 0.02918, "loss_rpn_bbox": 0.02018, "loss_cls": 0.22289, "acc": 89.94141, "loss_bbox": 0.34089, "loss_mask": 0.1233, "loss": 0.73644, "time": 7.75311}
{"mode": "train", "epoch": 3, "iter": 10, "lr": 0.00014, "memory": 3852, "data_time": 3.31365, "loss_rpn_cls": 0.04059, "loss_rpn_bbox": 0.00125, "loss_cls": 0.16616, "acc": 95.89844, "loss_bbox": 0.14141, "loss_mask": 0.10122, "loss": 0.45063, "time": 3.82042}
{"mode": "train", "epoch": 3, "iter": 12, "lr": 0.00015, "memory": 3852, "data_time": 0.16988, "loss_rpn_cls": 0.04462, "loss_rpn_bbox": 0.00677, "loss_cls": 0.25863, "acc": 89.4043, "loss_bbox": 0.36861, "loss_mask": 0.1598, "loss": 0.83843, "time": 0.77036}
{"mode": "train", "epoch": 3, "iter": 14, "lr": 0.00015, "memory": 3852, "data_time": 0.13459, "loss_rpn_cls": 0.01432, "loss_rpn_bbox": 0.01857, "loss_cls": 0.22583, "acc": 90.9668, "loss_bbox": 0.32296, "loss_mask": 0.26526, "loss": 0.84695, "time": 1.1311}
{"mode": "train", "epoch": 3, "iter": 16, "lr": 0.00015, "memory": 3852, "data_time": 0.18998, "loss_rpn_cls": 0.01847, "loss_rpn_bbox": 0.02125, "loss_cls": 0.2877, "acc": 84.76562, "loss_bbox": 0.4927, "loss_mask": 0.14121, "loss": 0.96133, "time": 1.24402}
{"mode": "train", "epoch": 3, "iter": 18, "lr": 0.00016, "memory": 3852, "data_time": 0.19512, "loss_rpn_cls": 0.05349, "loss_rpn_bbox": 0.01261, "loss_cls": 0.26437, "acc": 85.5957, "loss_bbox": 0.51699, "loss_mask": 0.27, "loss": 1.11746, "time": 1.25049}
{"mode": "train", "epoch": 3, "iter": 20, "lr": 0.00016, "memory": 3852, "data_time": 0.19649, "loss_rpn_cls": 0.01049, "loss_rpn_bbox": 0.00554, "loss_cls": 0.1433, "acc": 95.41016, "loss_bbox": 0.16243, "loss_mask": 0.04775, "loss": 0.36951, "time": 1.21184}
{"mode": "train", "epoch": 3, "iter": 22, "lr": 0.00017, "memory": 3852, "data_time": 14.35912, "loss_rpn_cls": 0.00836, "loss_rpn_bbox": 0.01121, "loss_cls": 0.23419, "acc": 88.37891, "loss_bbox": 0.40005, "loss_mask": 0.14687, "loss": 0.80068, "time": 14.91691}
{"mode": "train", "epoch": 3, "iter": 24, "lr": 0.00017, "memory": 3852, "data_time": 0.1504, "loss_rpn_cls": 0.00845, "loss_rpn_bbox": 0.01063, "loss_cls": 0.2286, "acc": 88.91602, "loss_bbox": 0.40506, "loss_mask": 0.08602, "loss": 0.73875, "time": 0.8574}
{"mode": "train", "epoch": 3, "iter": 26, "lr": 0.00017, "memory": 3852, "data_time": 3.01817, "loss_rpn_cls": 0.01379, "loss_rpn_bbox": 0.01293, "loss_cls": 0.22617, "acc": 89.64844, "loss_bbox": 0.36305, "loss_mask": 0.09091, "loss": 0.70686, "time": 3.989}
{"mode": "train", "epoch": 3, "iter": 28, "lr": 0.00018, "memory": 3852, "data_time": 0.2121, "loss_rpn_cls": 0.04642, "loss_rpn_bbox": 0.01441, "loss_cls": 0.21609, "acc": 90.03906, "loss_bbox": 0.36573, "loss_mask": 0.13669, "loss": 0.77933, "time": 1.12603}
{"mode": "train", "epoch": 3, "iter": 30, "lr": 0.00018, "memory": 3852, "data_time": 1.65282, "loss_rpn_cls": 0.01256, "loss_rpn_bbox": 0.00888, "loss_cls": 0.18633, "acc": 91.40625, "loss_bbox": 0.33064, "loss_mask": 0.09904, "loss": 0.63744, "time": 2.75133}
{"mode": "val", "epoch": 3, "iter": 13, "lr": 0.00018, "bbox_mAP": 0.6187, "bbox_mAP_50": 0.7863, "bbox_mAP_75": 0.7655, "bbox_mAP_s": 0.0096, "bbox_mAP_m": 0.509, "bbox_mAP_l": 0.6891, "bbox_mAP_copypaste": "0.6187 0.7863 0.7655 0.0096 0.5090 0.6891", "segm_mAP": 0.709, "segm_mAP_50": 0.787, "segm_mAP_75": 0.775, "segm_mAP_s": 0.0277, "segm_mAP_m": 0.5435, "segm_mAP_l": 0.8007, "segm_mAP_copypaste": "0.7090 0.7870 0.7750 0.0277 0.5435 0.8007"}
{"mode": "train", "epoch": 4, "iter": 2, "lr": 0.00019, "memory": 3852, "data_time": 1.22864, "loss_rpn_cls": 0.02263, "loss_rpn_bbox": 0.01485, "loss_cls": 0.17754, "acc": 91.8457, "loss_bbox": 0.29713, "loss_mask": 0.13364, "loss": 0.64579, "time": 2.21802}
{"mode": "train", "epoch": 4, "iter": 4, "lr": 0.00019, "memory": 3852, "data_time": 0.26977, "loss_rpn_cls": 0.00353, "loss_rpn_bbox": 0.00187, "loss_cls": 0.1118, "acc": 95.06836, "loss_bbox": 0.20198, "loss_mask": 0.0862, "loss": 0.40539, "time": 1.15973}
{"mode": "train", "epoch": 4, "iter": 6, "lr": 0.0002, "memory": 3888, "data_time": 0.22046, "loss_rpn_cls": 0.09548, "loss_rpn_bbox": 0.03156, "loss_cls": 0.28162, "acc": 84.7168, "loss_bbox": 0.60358, "loss_mask": 0.13628, "loss": 1.14851, "time": 1.28603}
{"mode": "train", "epoch": 4, "iter": 8, "lr": 0.0002, "memory": 3888, "data_time": 0.18185, "loss_rpn_cls": 0.02218, "loss_rpn_bbox": 0.00529, "loss_cls": 0.17252, "acc": 93.79883, "loss_bbox": 0.23019, "loss_mask": 0.10271, "loss": 0.53288, "time": 1.12632}
{"mode": "train", "epoch": 4, "iter": 10, "lr": 0.0002, "memory": 3888, "data_time": 0.19816, "loss_rpn_cls": 0.0035, "loss_rpn_bbox": 0.0106, "loss_cls": 0.15796, "acc": 92.5293, "loss_bbox": 0.35445, "loss_mask": 0.10521, "loss": 0.63173, "time": 1.16192}
{"mode": "train", "epoch": 4, "iter": 12, "lr": 0.00021, "memory": 3888, "data_time": 0.23093, "loss_rpn_cls": 0.01488, "loss_rpn_bbox": 0.01938, "loss_cls": 0.21486, "acc": 88.96484, "loss_bbox": 0.48632, "loss_mask": 0.08111, "loss": 0.81654, "time": 1.24145}
{"mode": "train", "epoch": 4, "iter": 14, "lr": 0.00021, "memory": 3888, "data_time": 0.22681, "loss_rpn_cls": 0.00992, "loss_rpn_bbox": 0.00529, "loss_cls": 0.16012, "acc": 92.87109, "loss_bbox": 0.38898, "loss_mask": 0.08349, "loss": 0.6478, "time": 1.20112}
{"mode": "train", "epoch": 4, "iter": 16, "lr": 0.00022, "memory": 3924, "data_time": 3.3027, "loss_rpn_cls": 0.0103, "loss_rpn_bbox": 0.01953, "loss_cls": 0.18987, "acc": 92.57812, "loss_bbox": 0.34043, "loss_mask": 0.15392, "loss": 0.71406, "time": 3.82086}
{"mode": "train", "epoch": 4, "iter": 18, "lr": 0.00022, "memory": 3924, "data_time": 0.15261, "loss_rpn_cls": 0.0217, "loss_rpn_bbox": 0.01436, "loss_cls": 0.19919, "acc": 92.33398, "loss_bbox": 0.39695, "loss_mask": 0.18021, "loss": 0.81242, "time": 0.80587}
{"mode": "train", "epoch": 4, "iter": 20, "lr": 0.00022, "memory": 3924, "data_time": 0.13323, "loss_rpn_cls": 0.03472, "loss_rpn_bbox": 0.00912, "loss_cls": 0.11186, "acc": 97.41211, "loss_bbox": 0.15305, "loss_mask": 0.08976, "loss": 0.39852, "time": 0.74924}
{"mode": "train", "epoch": 4, "iter": 22, "lr": 0.00023, "memory": 3924, "data_time": 0.14054, "loss_rpn_cls": 0.02158, "loss_rpn_bbox": 0.00632, "loss_cls": 0.13535, "acc": 95.11719, "loss_bbox": 0.2624, "loss_mask": 0.08619, "loss": 0.51184, "time": 0.85489}
{"mode": "train", "epoch": 4, "iter": 24, "lr": 0.00023, "memory": 3924, "data_time": 6.58542, "loss_rpn_cls": 0.01742, "loss_rpn_bbox": 0.00418, "loss_cls": 0.15972, "acc": 93.70117, "loss_bbox": 0.3946, "loss_mask": 0.23014, "loss": 0.80605, "time": 7.52053}
{"mode": "train", "epoch": 4, "iter": 26, "lr": 0.00024, "memory": 3924, "data_time": 9.9116, "loss_rpn_cls": 0.0144, "loss_rpn_bbox": 0.0014, "loss_cls": 0.10106, "acc": 97.99805, "loss_bbox": 0.1654, "loss_mask": 0.06274, "loss": 0.34501, "time": 10.14995}
{"mode": "train", "epoch": 4, "iter": 28, "lr": 0.00024, "memory": 3924, "data_time": 0.14339, "loss_rpn_cls": 0.00129, "loss_rpn_bbox": 0.01219, "loss_cls": 0.24159, "acc": 87.40234, "loss_bbox": 0.62879, "loss_mask": 0.097, "loss": 0.98087, "time": 0.42009}
{"mode": "train", "epoch": 4, "iter": 30, "lr": 0.00024, "memory": 3924, "data_time": 0.1856, "loss_rpn_cls": 0.0194, "loss_rpn_bbox": 0.00721, "loss_cls": 0.12075, "acc": 96.38672, "loss_bbox": 0.2598, "loss_mask": 0.10185, "loss": 0.50902, "time": 0.85174}
{"mode": "val", "epoch": 4, "iter": 13, "lr": 0.00025, "bbox_mAP": 0.6555, "bbox_mAP_50": 0.8302, "bbox_mAP_75": 0.8174, "bbox_mAP_s": 0.067, "bbox_mAP_m": 0.5747, "bbox_mAP_l": 0.7123, "bbox_mAP_copypaste": "0.6555 0.8302 0.8174 0.0670 0.5747 0.7123", "segm_mAP": 0.7366, "segm_mAP_50": 0.8258, "segm_mAP_75": 0.8258, "segm_mAP_s": 0.0544, "segm_mAP_m": 0.6117, "segm_mAP_l": 0.8114, "segm_mAP_copypaste": "0.7366 0.8258 0.8258 0.0544 0.6117 0.8114"}
{"mode": "train", "epoch": 5, "iter": 2, "lr": 0.00025, "memory": 3924, "data_time": 1.24365, "loss_rpn_cls": 0.02902, "loss_rpn_bbox": 0.0097, "loss_cls": 0.1554, "acc": 94.28711, "loss_bbox": 0.43151, "loss_mask": 0.09533, "loss": 0.72096, "time": 2.0019}
{"mode": "train", "epoch": 5, "iter": 4, "lr": 0.00025, "memory": 3924, "data_time": 0.46208, "loss_rpn_cls": 0.05101, "loss_rpn_bbox": 0.01078, "loss_cls": 0.13618, "acc": 96.48438, "loss_bbox": 0.25925, "loss_mask": 0.10268, "loss": 0.55991, "time": 1.14005}
{"mode": "train", "epoch": 5, "iter": 6, "lr": 0.00026, "memory": 3924, "data_time": 0.16359, "loss_rpn_cls": 0.01099, "loss_rpn_bbox": 0.00611, "loss_cls": 0.10898, "acc": 95.11719, "loss_bbox": 0.2344, "loss_mask": 0.07646, "loss": 0.43694, "time": 0.80532}
{"mode": "train", "epoch": 5, "iter": 8, "lr": 0.00026, "memory": 3924, "data_time": 1.55734, "loss_rpn_cls": 0.01701, "loss_rpn_bbox": 0.0148, "loss_cls": 0.17176, "acc": 93.70117, "loss_bbox": 0.47236, "loss_mask": 0.12504, "loss": 0.80097, "time": 2.51744}
{"mode": "train", "epoch": 5, "iter": 10, "lr": 0.00027, "memory": 3924, "data_time": 0.149, "loss_rpn_cls": 0.02039, "loss_rpn_bbox": 0.01661, "loss_cls": 0.13148, "acc": 95.16602, "loss_bbox": 0.31671, "loss_mask": 0.16279, "loss": 0.64798, "time": 0.83294}
{"mode": "train", "epoch": 5, "iter": 12, "lr": 0.00027, "memory": 3924, "data_time": 0.16187, "loss_rpn_cls": 0.02235, "loss_rpn_bbox": 0.00616, "loss_cls": 0.11646, "acc": 96.5332, "loss_bbox": 0.34579, "loss_mask": 0.08392, "loss": 0.57468, "time": 0.80658}
{"mode": "train", "epoch": 5, "iter": 14, "lr": 0.00027, "memory": 3924, "data_time": 0.16177, "loss_rpn_cls": 0.01591, "loss_rpn_bbox": 0.01164, "loss_cls": 0.12113, "acc": 96.43555, "loss_bbox": 0.32161, "loss_mask": 0.07267, "loss": 0.54295, "time": 0.73957}
{"mode": "train", "epoch": 5, "iter": 16, "lr": 0.00028, "memory": 3924, "data_time": 0.15921, "loss_rpn_cls": 0.01329, "loss_rpn_bbox": 0.01384, "loss_cls": 0.14315, "acc": 96.92383, "loss_bbox": 0.41765, "loss_mask": 0.09155, "loss": 0.67948, "time": 0.88998}
{"mode": "train", "epoch": 5, "iter": 18, "lr": 0.00028, "memory": 3924, "data_time": 0.15818, "loss_rpn_cls": 0.00052, "loss_rpn_bbox": 0.00389, "loss_cls": 0.13811, "acc": 95.75195, "loss_bbox": 0.37501, "loss_mask": 0.16607, "loss": 0.6836, "time": 1.26189}
{"mode": "train", "epoch": 5, "iter": 20, "lr": 0.00029, "memory": 3924, "data_time": 0.16262, "loss_rpn_cls": 0.02742, "loss_rpn_bbox": 0.01464, "loss_cls": 0.16889, "acc": 93.84766, "loss_bbox": 0.30664, "loss_mask": 0.13165, "loss": 0.64924, "time": 1.32639}
{"mode": "train", "epoch": 5, "iter": 22, "lr": 0.00029, "memory": 3924, "data_time": 0.15134, "loss_rpn_cls": 0.00482, "loss_rpn_bbox": 0.0087, "loss_cls": 0.12175, "acc": 96.28906, "loss_bbox": 0.28516, "loss_mask": 0.07893, "loss": 0.49936, "time": 1.29182}
{"mode": "train", "epoch": 5, "iter": 24, "lr": 0.00029, "memory": 3924, "data_time": 0.16193, "loss_rpn_cls": 0.00591, "loss_rpn_bbox": 0.00701, "loss_cls": 0.12005, "acc": 95.89844, "loss_bbox": 0.29158, "loss_mask": 0.13758, "loss": 0.56213, "time": 1.31853}
{"mode": "train", "epoch": 5, "iter": 26, "lr": 0.0003, "memory": 3924, "data_time": 0.1943, "loss_rpn_cls": 0.00344, "loss_rpn_bbox": 0.0035, "loss_cls": 0.08614, "acc": 97.31445, "loss_bbox": 0.25309, "loss_mask": 0.10303, "loss": 0.4492, "time": 1.30569}
{"mode": "train", "epoch": 5, "iter": 28, "lr": 0.0003, "memory": 3924, "data_time": 0.20583, "loss_rpn_cls": 0.01596, "loss_rpn_bbox": 0.01582, "loss_cls": 0.10525, "acc": 96.92383, "loss_bbox": 0.30928, "loss_mask": 0.11131, "loss": 0.55761, "time": 1.32346}
{"mode": "train", "epoch": 5, "iter": 30, "lr": 0.00031, "memory": 3924, "data_time": 0.16221, "loss_rpn_cls": 0.02231, "loss_rpn_bbox": 0.01921, "loss_cls": 0.10027, "acc": 97.55859, "loss_bbox": 0.25243, "loss_mask": 0.09198, "loss": 0.48619, "time": 1.33513}
{"mode": "val", "epoch": 5, "iter": 13, "lr": 0.00031, "bbox_mAP": 0.6965, "bbox_mAP_50": 0.8554, "bbox_mAP_75": 0.8135, "bbox_mAP_s": 0.0754, "bbox_mAP_m": 0.6172, "bbox_mAP_l": 0.7533, "bbox_mAP_copypaste": "0.6965 0.8554 0.8135 0.0754 0.6172 0.7533", "segm_mAP": 0.774, "segm_mAP_50": 0.8554, "segm_mAP_75": 0.8392, "segm_mAP_s": 0.1001, "segm_mAP_m": 0.6622, "segm_mAP_l": 0.8392, "segm_mAP_copypaste": "0.7740 0.8554 0.8392 0.1001 0.6622 0.8392"}
{"mode": "train", "epoch": 6, "iter": 2, "lr": 0.00031, "memory": 3924, "data_time": 1.35199, "loss_rpn_cls": 0.01843, "loss_rpn_bbox": 0.01222, "loss_cls": 0.09535, "acc": 97.11914, "loss_bbox": 0.2405, "loss_mask": 0.13378, "loss": 0.50028, "time": 2.24859}
{"mode": "train", "epoch": 6, "iter": 4, "lr": 0.00032, "memory": 3924, "data_time": 0.22905, "loss_rpn_cls": 0.00155, "loss_rpn_bbox": 0.00359, "loss_cls": 0.08829, "acc": 97.65625, "loss_bbox": 0.28798, "loss_mask": 0.10596, "loss": 0.48737, "time": 1.10735}
{"mode": "train", "epoch": 6, "iter": 6, "lr": 0.00032, "memory": 3924, "data_time": 0.19956, "loss_rpn_cls": 0.00876, "loss_rpn_bbox": 0.01053, "loss_cls": 0.11206, "acc": 96.43555, "loss_bbox": 0.31936, "loss_mask": 0.10347, "loss": 0.55417, "time": 1.29184}
{"mode": "train", "epoch": 6, "iter": 8, "lr": 0.00032, "memory": 3924, "data_time": 0.1545, "loss_rpn_cls": 0.00138, "loss_rpn_bbox": 0.00186, "loss_cls": 0.04328, "acc": 99.12109, "loss_bbox": 0.10658, "loss_mask": 0.04751, "loss": 0.2006, "time": 1.16708}
{"mode": "train", "epoch": 6, "iter": 10, "lr": 0.00033, "memory": 3924, "data_time": 5.73173, "loss_rpn_cls": 0.00363, "loss_rpn_bbox": 0.01098, "loss_cls": 0.10928, "acc": 96.14258, "loss_bbox": 0.32634, "loss_mask": 0.07546, "loss": 0.52568, "time": 6.33394}
{"mode": "train", "epoch": 6, "iter": 12, "lr": 0.00033, "memory": 3924, "data_time": 4.5096, "loss_rpn_cls": 0.01184, "loss_rpn_bbox": 0.02257, "loss_cls": 0.19023, "acc": 92.1875, "loss_bbox": 0.37543, "loss_mask": 0.13846, "loss": 0.73853, "time": 5.71147}
{"mode": "train", "epoch": 6, "iter": 14, "lr": 0.00034, "memory": 3924, "data_time": 0.14425, "loss_rpn_cls": 0.00516, "loss_rpn_bbox": 0.00779, "loss_cls": 0.09436, "acc": 97.60742, "loss_bbox": 0.30555, "loss_mask": 0.1118, "loss": 0.52465, "time": 1.28794}
{"mode": "train", "epoch": 6, "iter": 16, "lr": 0.00034, "memory": 3924, "data_time": 0.13993, "loss_rpn_cls": 0.0045, "loss_rpn_bbox": 0.0072, "loss_cls": 0.06657, "acc": 98.14453, "loss_bbox": 0.17186, "loss_mask": 0.05264, "loss": 0.30276, "time": 1.31709}
{"mode": "train", "epoch": 6, "iter": 18, "lr": 0.00034, "memory": 3924, "data_time": 0.15537, "loss_rpn_cls": 0.01432, "loss_rpn_bbox": 0.0021, "loss_cls": 0.04705, "acc": 98.68164, "loss_bbox": 0.11065, "loss_mask": 0.05518, "loss": 0.2293, "time": 1.28426}
{"mode": "train", "epoch": 6, "iter": 20, "lr": 0.00035, "memory": 3924, "data_time": 0.15641, "loss_rpn_cls": 0.03572, "loss_rpn_bbox": 0.01268, "loss_cls": 0.10872, "acc": 96.14258, "loss_bbox": 0.22792, "loss_mask": 0.16452, "loss": 0.54955, "time": 1.33522}
{"mode": "train", "epoch": 6, "iter": 22, "lr": 0.00035, "memory": 3924, "data_time": 0.13525, "loss_rpn_cls": 0.0169, "loss_rpn_bbox": 0.0026, "loss_cls": 0.049, "acc": 98.97461, "loss_bbox": 0.07682, "loss_mask": 0.05259, "loss": 0.19792, "time": 1.26878}
{"mode": "train", "epoch": 6, "iter": 24, "lr": 0.00036, "memory": 3924, "data_time": 0.22642, "loss_rpn_cls": 0.00871, "loss_rpn_bbox": 0.00396, "loss_cls": 0.06953, "acc": 97.99805, "loss_bbox": 0.15837, "loss_mask": 0.06884, "loss": 0.3094, "time": 1.33383}
{"mode": "train", "epoch": 6, "iter": 26, "lr": 0.00036, "memory": 3924, "data_time": 0.22429, "loss_rpn_cls": 0.01944, "loss_rpn_bbox": 0.02072, "loss_cls": 0.10304, "acc": 96.77734, "loss_bbox": 0.21907, "loss_mask": 0.07401, "loss": 0.43629, "time": 1.33331}
{"mode": "train", "epoch": 6, "iter": 28, "lr": 0.00036, "memory": 3924, "data_time": 0.18033, "loss_rpn_cls": 0.02431, "loss_rpn_bbox": 0.0316, "loss_cls": 0.12051, "acc": 95.94727, "loss_bbox": 0.27367, "loss_mask": 0.14069, "loss": 0.59077, "time": 0.91341}
{"mode": "train", "epoch": 6, "iter": 30, "lr": 0.00037, "memory": 3924, "data_time": 0.12547, "loss_rpn_cls": 0.00543, "loss_rpn_bbox": 0.00608, "loss_cls": 0.07136, "acc": 96.875, "loss_bbox": 0.12856, "loss_mask": 0.07259, "loss": 0.28403, "time": 0.77666}
{"mode": "val", "epoch": 6, "iter": 13, "lr": 0.00037, "bbox_mAP": 0.7357, "bbox_mAP_50": 0.8742, "bbox_mAP_75": 0.8657, "bbox_mAP_s": 0.1604, "bbox_mAP_m": 0.6512, "bbox_mAP_l": 0.789, "bbox_mAP_copypaste": "0.7357 0.8742 0.8657 0.1604 0.6512 0.7890", "segm_mAP": 0.7913, "segm_mAP_50": 0.8742, "segm_mAP_75": 0.8643, "segm_mAP_s": 0.1301, "segm_mAP_m": 0.6702, "segm_mAP_l": 0.8565, "segm_mAP_copypaste": "0.7913 0.8742 0.8643 0.1301 0.6702 0.8565"}
{"mode": "train", "epoch": 7, "iter": 2, "lr": 0.00037, "memory": 3924, "data_time": 1.30941, "loss_rpn_cls": 0.01488, "loss_rpn_bbox": 0.02128, "loss_cls": 0.0844, "acc": 97.90039, "loss_bbox": 0.15966, "loss_mask": 0.08245, "loss": 0.36267, "time": 2.42932}
{"mode": "train", "epoch": 7, "iter": 4, "lr": 0.00038, "memory": 3924, "data_time": 0.18352, "loss_rpn_cls": 0.00688, "loss_rpn_bbox": 0.00134, "loss_cls": 0.02954, "acc": 99.16992, "loss_bbox": 0.04437, "loss_mask": 0.04788, "loss": 0.13002, "time": 1.16746}
{"mode": "train", "epoch": 7, "iter": 6, "lr": 0.00038, "memory": 3924, "data_time": 9.70064, "loss_rpn_cls": 0.01264, "loss_rpn_bbox": 0.0089, "loss_cls": 0.06078, "acc": 98.29102, "loss_bbox": 0.12038, "loss_mask": 0.09054, "loss": 0.29324, "time": 10.57327}
{"mode": "train", "epoch": 7, "iter": 8, "lr": 0.00039, "memory": 3924, "data_time": 5.15849, "loss_rpn_cls": 0.00951, "loss_rpn_bbox": 0.00612, "loss_cls": 0.09959, "acc": 96.77734, "loss_bbox": 0.1949, "loss_mask": 0.14911, "loss": 0.45923, "time": 6.24779}
{"mode": "train", "epoch": 7, "iter": 10, "lr": 0.00039, "memory": 3924, "data_time": 0.18422, "loss_rpn_cls": 8e-05, "loss_rpn_bbox": 0.00346, "loss_cls": 0.03912, "acc": 98.92578, "loss_bbox": 0.05611, "loss_mask": 0.03893, "loss": 0.1377, "time": 1.13597}
{"mode": "train", "epoch": 7, "iter": 12, "lr": 0.00039, "memory": 3924, "data_time": 0.18406, "loss_rpn_cls": 0.00154, "loss_rpn_bbox": 0.00242, "loss_cls": 0.03336, "acc": 99.21875, "loss_bbox": 0.04587, "loss_mask": 0.04685, "loss": 0.13004, "time": 1.16972}
{"mode": "train", "epoch": 7, "iter": 14, "lr": 0.0004, "memory": 3924, "data_time": 6.47648, "loss_rpn_cls": 0.0107, "loss_rpn_bbox": 0.0039, "loss_cls": 0.03591, "acc": 99.31641, "loss_bbox": 0.05681, "loss_mask": 0.04895, "loss": 0.15627, "time": 7.37576}
{"mode": "train", "epoch": 7, "iter": 16, "lr": 0.0004, "memory": 3924, "data_time": 0.22423, "loss_rpn_cls": 0.01404, "loss_rpn_bbox": 0.02009, "loss_cls": 0.10393, "acc": 95.41016, "loss_bbox": 0.17251, "loss_mask": 0.09312, "loss": 0.40368, "time": 1.14901}
{"mode": "train", "epoch": 7, "iter": 18, "lr": 0.00041, "memory": 3924, "data_time": 0.17172, "loss_rpn_cls": 0.006, "loss_rpn_bbox": 0.01466, "loss_cls": 0.09253, "acc": 96.5332, "loss_bbox": 0.17065, "loss_mask": 0.08181, "loss": 0.36566, "time": 0.74369}
{"mode": "train", "epoch": 7, "iter": 20, "lr": 0.00041, "memory": 3924, "data_time": 0.20071, "loss_rpn_cls": 0.00752, "loss_rpn_bbox": 0.02176, "loss_cls": 0.14049, "acc": 94.18945, "loss_bbox": 0.21773, "loss_mask": 0.1294, "loss": 0.51691, "time": 0.79804}
{"mode": "train", "epoch": 7, "iter": 22, "lr": 0.00041, "memory": 3924, "data_time": 0.15404, "loss_rpn_cls": 0.00616, "loss_rpn_bbox": 0.01598, "loss_cls": 0.09589, "acc": 96.09375, "loss_bbox": 0.15866, "loss_mask": 0.08806, "loss": 0.36476, "time": 0.62158}
{"mode": "train", "epoch": 7, "iter": 24, "lr": 0.00042, "memory": 3924, "data_time": 0.15938, "loss_rpn_cls": 0.00405, "loss_rpn_bbox": 0.00207, "loss_cls": 0.04645, "acc": 98.38867, "loss_bbox": 0.03719, "loss_mask": 0.03886, "loss": 0.12862, "time": 0.81546}
{"mode": "train", "epoch": 7, "iter": 26, "lr": 0.00042, "memory": 3924, "data_time": 0.15661, "loss_rpn_cls": 0.0065, "loss_rpn_bbox": 0.01086, "loss_cls": 0.08125, "acc": 96.92383, "loss_bbox": 0.11385, "loss_mask": 0.11603, "loss": 0.3285, "time": 1.27435}
{"mode": "train", "epoch": 7, "iter": 28, "lr": 0.00043, "memory": 3924, "data_time": 0.18914, "loss_rpn_cls": 0.01445, "loss_rpn_bbox": 0.01794, "loss_cls": 0.06939, "acc": 97.94922, "loss_bbox": 0.12216, "loss_mask": 0.1108, "loss": 0.33475, "time": 1.35104}
{"mode": "train", "epoch": 7, "iter": 30, "lr": 0.00043, "memory": 3924, "data_time": 0.19389, "loss_rpn_cls": 0.00706, "loss_rpn_bbox": 0.01512, "loss_cls": 0.11244, "acc": 95.36133, "loss_bbox": 0.11653, "loss_mask": 0.07286, "loss": 0.32401, "time": 1.2544}
{"mode": "val", "epoch": 7, "iter": 13, "lr": 0.00043, "bbox_mAP": 0.7325, "bbox_mAP_50": 0.888, "bbox_mAP_75": 0.8784, "bbox_mAP_s": 0.2842, "bbox_mAP_m": 0.6197, "bbox_mAP_l": 0.7845, "bbox_mAP_copypaste": "0.7325 0.8880 0.8784 0.2842 0.6197 0.7845", "segm_mAP": 0.7938, "segm_mAP_50": 0.888, "segm_mAP_75": 0.8602, "segm_mAP_s": 0.1342, "segm_mAP_m": 0.6391, "segm_mAP_l": 0.8597, "segm_mAP_copypaste": "0.7938 0.8880 0.8602 0.1342 0.6391 0.8597"}
{"mode": "train", "epoch": 8, "iter": 2, "lr": 0.00044, "memory": 3924, "data_time": 1.22111, "loss_rpn_cls": 0.01395, "loss_rpn_bbox": 0.017, "loss_cls": 0.12225, "acc": 94.48242, "loss_bbox": 0.14283, "loss_mask": 0.09964, "loss": 0.39567, "time": 1.81814}
{"mode": "train", "epoch": 8, "iter": 4, "lr": 0.00044, "memory": 3924, "data_time": 3.80216, "loss_rpn_cls": 0.01645, "loss_rpn_bbox": 0.00325, "loss_cls": 0.04019, "acc": 98.53516, "loss_bbox": 0.04067, "loss_mask": 0.06021, "loss": 0.16077, "time": 4.61347}
{"mode": "train", "epoch": 8, "iter": 6, "lr": 0.00044, "memory": 3924, "data_time": 1.80795, "loss_rpn_cls": 0.00791, "loss_rpn_bbox": 0.00717, "loss_cls": 0.09689, "acc": 95.99609, "loss_bbox": 0.12975, "loss_mask": 0.11414, "loss": 0.35585, "time": 2.77113}
{"mode": "train", "epoch": 8, "iter": 8, "lr": 0.00045, "memory": 3924, "data_time": 0.14693, "loss_rpn_cls": 0.01973, "loss_rpn_bbox": 0.00596, "loss_cls": 0.0547, "acc": 97.55859, "loss_bbox": 0.092, "loss_mask": 0.11859, "loss": 0.29098, "time": 0.76007}
{"mode": "train", "epoch": 8, "iter": 10, "lr": 0.00045, "memory": 3924, "data_time": 0.26803, "loss_rpn_cls": 0.01612, "loss_rpn_bbox": 0.01905, "loss_cls": 0.12572, "acc": 94.9707, "loss_bbox": 0.20095, "loss_mask": 0.14547, "loss": 0.5073, "time": 1.16833}
{"mode": "train", "epoch": 8, "iter": 12, "lr": 0.00046, "memory": 3924, "data_time": 0.19993, "loss_rpn_cls": 0.00681, "loss_rpn_bbox": 0.0224, "loss_cls": 0.10545, "acc": 96.28906, "loss_bbox": 0.13691, "loss_mask": 0.10099, "loss": 0.37257, "time": 0.93418}
{"mode": "train", "epoch": 8, "iter": 14, "lr": 0.00046, "memory": 3924, "data_time": 0.21447, "loss_rpn_cls": 0.01295, "loss_rpn_bbox": 0.00389, "loss_cls": 0.04707, "acc": 98.58398, "loss_bbox": 0.07741, "loss_mask": 0.06369, "loss": 0.20502, "time": 0.96896}
{"mode": "train", "epoch": 8, "iter": 16, "lr": 0.00046, "memory": 3924, "data_time": 0.19106, "loss_rpn_cls": 0.00787, "loss_rpn_bbox": 0.0023, "loss_cls": 0.05066, "acc": 98.4375, "loss_bbox": 0.06063, "loss_mask": 0.05084, "loss": 0.17231, "time": 0.95542}
{"mode": "train", "epoch": 8, "iter": 18, "lr": 0.00047, "memory": 3924, "data_time": 0.1744, "loss_rpn_cls": 0.02063, "loss_rpn_bbox": 0.01932, "loss_cls": 0.06388, "acc": 98.33984, "loss_bbox": 0.08939, "loss_mask": 0.07, "loss": 0.26323, "time": 1.04156}
{"mode": "train", "epoch": 8, "iter": 20, "lr": 0.00047, "memory": 3924, "data_time": 0.16576, "loss_rpn_cls": 0.00096, "loss_rpn_bbox": 0.01222, "loss_cls": 0.08947, "acc": 96.33789, "loss_bbox": 0.11281, "loss_mask": 0.08782, "loss": 0.30328, "time": 1.14661}
{"mode": "train", "epoch": 8, "iter": 22, "lr": 0.00048, "memory": 3924, "data_time": 0.19373, "loss_rpn_cls": 0.00909, "loss_rpn_bbox": 0.00312, "loss_cls": 0.04815, "acc": 98.73047, "loss_bbox": 0.06895, "loss_mask": 0.07083, "loss": 0.20015, "time": 0.88673}
{"mode": "train", "epoch": 8, "iter": 24, "lr": 0.00048, "memory": 3924, "data_time": 0.19083, "loss_rpn_cls": 0.00427, "loss_rpn_bbox": 0.01359, "loss_cls": 0.08843, "acc": 96.5332, "loss_bbox": 0.15009, "loss_mask": 0.07865, "loss": 0.33504, "time": 0.88092}
{"mode": "train", "epoch": 8, "iter": 26, "lr": 0.00048, "memory": 3924, "data_time": 0.63305, "loss_rpn_cls": 0.0093, "loss_rpn_bbox": 0.01426, "loss_cls": 0.08239, "acc": 97.2168, "loss_bbox": 0.14287, "loss_mask": 0.15064, "loss": 0.39945, "time": 0.88245}
{"mode": "train", "epoch": 8, "iter": 28, "lr": 0.00049, "memory": 3924, "data_time": 0.15396, "loss_rpn_cls": 0.0029, "loss_rpn_bbox": 0.00226, "loss_cls": 0.025, "acc": 99.16992, "loss_bbox": 0.0359, "loss_mask": 0.04677, "loss": 0.11284, "time": 0.40481}
{"mode": "train", "epoch": 8, "iter": 30, "lr": 0.00049, "memory": 3924, "data_time": 0.17787, "loss_rpn_cls": 0.0092, "loss_rpn_bbox": 0.00654, "loss_cls": 0.04077, "acc": 98.68164, "loss_bbox": 0.0676, "loss_mask": 0.04771, "loss": 0.17182, "time": 0.82773}
{"mode": "val", "epoch": 8, "iter": 13, "lr": 0.00049, "bbox_mAP": 0.7693, "bbox_mAP_50": 0.8936, "bbox_mAP_75": 0.8826, "bbox_mAP_s": 0.3172, "bbox_mAP_m": 0.6576, "bbox_mAP_l": 0.823, "bbox_mAP_copypaste": "0.7693 0.8936 0.8826 0.3172 0.6576 0.8230", "segm_mAP": 0.8043, "segm_mAP_50": 0.8936, "segm_mAP_75": 0.8765, "segm_mAP_s": 0.1301, "segm_mAP_m": 0.664, "segm_mAP_l": 0.8691, "segm_mAP_copypaste": "0.8043 0.8936 0.8765 0.1301 0.6640 0.8691"}
